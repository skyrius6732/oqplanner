plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'war'	// war build 추가
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

bootWar.enabled = false
war.enabled = true
war.archiveFileName = "oqplanner.war"


java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
	implementation 'org.thymeleaf:thymeleaf:3.1.1.RELEASE'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.thymeleaf:thymeleaf:3.1.1.RELEASE'
	testImplementation 'org.projectlombok:lombok'


	// jpa
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// mysql connector
	implementation 'mysql:mysql-connector-java:8.0.26'
	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	// logback
//	implementation 'ch.qos.logback:logback-classic:1.2.6'

	// Mono: 리액티브 프로그래밍에서 단일 결과 값을 나타내는 클래스로, 비동기 및 논블로킹 처리를 지원합니다.
	implementation 'io.projectreactor:reactor-core:3.5.0'

	// WebClient: 스프링에서 제공하는 비동기적인 웹 클라이언트로, HTTP 요청을 쉽게 만들고 응답을 비동기적으로 처리할 수 있도록 합니다.
	implementation 'org.springframework.boot:spring-boot-starter-webflux:2.5.4'

	implementation 'org.springframework.boot:spring-boot-starter-quartz'

	// selenium java 크롤링 오픈 라이브러리 (크롬버전과 크롬드라이버 버전이 일치해야하는 이슈 발생)
	//implementation 'org.seleniumhq.selenium:selenium-java:4.6.0'

	// jsoup java 크롤링 오픈 라이브러리
	implementation 'org.jsoup:jsoup:1.15.3'

	
//	애플리케이션의 내장 서블릿 컨테이너(내장톰캣)가 외부 서블릿컨테이너 작동에 영향을 주지 않도록 
//	providedRuntime으로 명시해야 한다. 빌드 실행 시 providedRuntime로 지정된 의존성(dependency)은 
//	의존성 jar파일이 lib-provided 디렉터리에 패키지 되어 WAR파일이 생성되므로, 
//	내/외장 서블릿 컨테이너 모두에 사용 가능한 WAR파일이 될 수 있다.
			
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'


}

tasks.named('test') {
	useJUnitPlatform()
}

// 테스트 코드를 제외한 빌드 수행
tasks.withType(Test) {
	enabled = false
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

sourceSets {
	main {
		resources {
			srcDirs "src/main/resources", "src/main/resources-env/${profile}"
		}
	}
}

tasks {
	processResources {
		duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
	}
}
